(define (f n) 
    (f-iter 0 1 2 n (- n 2)))
    
(define (f-iter fn-3 fn-2 fn-1 n count)
	(cond ((< n 3) n)
	        (else (if (= count 0) 
	                  fn-1 
	                  (f-iter fn-2 fn-1 (+ fn-1 (* 2 fn-2) (* 3 fn-3)) n (- count 1))))
	)
)


(and (= (f 0) 0)
     (= (f 1) 1)
     (= (f 2) 2)
     (= (f 3) 4)
     (= (f 4) 11)
     (= (f 5) 25)
	 (= (f 6) 59)
)